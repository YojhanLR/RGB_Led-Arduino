
import com.panamahitek.PanamaHitek_Arduino;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.colorchooser.ColorSelectionModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author YojhanLR
 */
public class NewJFrame extends javax.swing.JFrame {

    int R = 0, G = 0, B = 0; //Variables para cada //color (Rojo, Verde y Azul)
    PanamaHitek_Arduino Arduino = new PanamaHitek_Arduino(); //Variable para //instanciar la librería Arduino
    String OutputR, OutputG, OutputB; //Variables que //contendrán los valores a enviar a Arduino

    public NewJFrame() {
        initComponents();
        try {
            Arduino.ArduinoTX("COM3", 2000, 9600);
        } catch (Exception ex) {
            System.out.println("Error: "+ex);
        }
        
        this.setLocationRelativeTo(null); //Ubica ventana en la mitad de la pantalla
        
        ColorSelectionModel model = jColorChooser1.getSelectionModel();
        ChangeListener changeListener = new ChangeListener() {
            
            @Override
            public void stateChanged(ChangeEvent e) {
                try {
                    System.out.println("Cambio de color: "+jColorChooser1.getColor());
                    R = jColorChooser1.getColor().getRed();
                    G = jColorChooser1.getColor().getGreen();
                    B = jColorChooser1.getColor().getBlue();
                    Thread.sleep(100);
                    SetData();
                    try {
                        Arduino.sendData(OutputR);
                        Arduino.sendData(OutputG);
                        Arduino.sendData(OutputB);
                    } catch (Exception ex) {
                        System.out.println("Error enviando datos: "+ex);
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
         model.addChangeListener(changeListener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RGB Led Arduino ");
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     * try{
        short x = (short) Integer.parseInt(jTextField1.getText());
            System.out.println(x);
            byte upper = (byte) (x >> 8); //Get the upper 8 bits
            byte lower = (byte) (x & 0xFF); //Get the lower 8bits
            Arduino.sendData(upper);
            Arduino.sendData(lower);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error: "+e, "Error", JOptionPane.ERROR_MESSAGE);
        }
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    public void SetData() {
    OutputR = "1";
    OutputG = "2";
    OutputB = "3";
    if (R < 10) {
    OutputR = OutputR + "00" + R;
    } else if (R < 100) {
    OutputR = OutputR + "0" + R;
    } else {
    OutputR = OutputR + R;
    }

    if (G < 10) {
    OutputG = OutputG + "00" + G;
    } else if (G < 100) {
    OutputG = OutputG + "0" + G;
    } else {
    OutputG = OutputG + G;
    }

    if (B < 10) {
    OutputB = OutputB + "00" + B;
    } else if (B < 100) {
    OutputB = OutputB + "0" + B;
    } else {
    OutputB = OutputB + B;
    }

}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JColorChooser jColorChooser1;
    // End of variables declaration//GEN-END:variables
}
